defineConstant("L", initializeAncestralNucleotides(ref_path));
initializeRecombinationRate(0);

defineGlobal("effsize_pos", readCSV(paste0(cwdir, "/causal_gene_info.csv"), colNames = T));
initializeMutationTypeNuc(0, 1, "f", 0.0); // Neutral mutations
initializeGenomicElementType(0, 0, 1.0, mmJukesCantor(mut_rate));
initializeMutationTypeNuc(1, 1, "f", 0.0);  // Mutations contributing to traits
initializeGenomicElementType(1, 1, 1.0, mmJukesCantor(mut_rate));
	
//initializeGenomicElement(0, 0, L - 1);

range_genes = c();
traits_transmissibility = c();
traits_recoveryrate = c();

n_causal_genes = n_causal_genes_1 + n_causal_genes_2;
//n_causal_genes = nrow(effsize_pos);
for (i in 1:n_causal_genes)
{
	range_genes = c(range_genes, effsize_pos.subset(i-1,1):effsize_pos.subset(i-1,2));
	traits_transmissibility = c(traits_transmissibility, rep(effsize_pos.subset(i-1,3), effsize_pos.subset(i-1,2) - effsize_pos.subset(i-1,1) + 1));
	traits_recoveryrate = c(traits_recoveryrate, rep(effsize_pos.subset(i-1,4), effsize_pos.subset(i-1,2) - effsize_pos.subset(i-1,1) + 1));
}

n_causal_genes = effsize_pos.nrow;
initializeGenomicElement(0, 0, effsize_pos.subset(0,1) - 1);
nminus1 = n_causal_genes - 1;
trait_locs = c(1);

for (i in 1:nminus1)
{
	trait_locs = c(trait_locs, effsize_pos.subset(i-1,1), effsize_pos.subset(i-1,2));
	initializeGenomicElement(1, effsize_pos.subset(i-1,1), effsize_pos.subset(i-1,2) - 1);
	initializeGenomicElement(0, effsize_pos.subset(i-1,2), effsize_pos.subset(i,1) - 1);
}

//initializeMutationTypeNuc(i, 1, "f", casual_genes.subset(nminus1,3));
//initializeGenomicElementType(i, i, 1.0, mmJukesCantor(mut_rate));
trait_locs = c(trait_locs, effsize_pos.subset(nminus1,1), effsize_pos.subset(nminus1,2));
initializeGenomicElement(1, effsize_pos.subset(nminus1,1), effsize_pos.subset(nminus1,2) - 1);
initializeGenomicElement(0, effsize_pos.subset(nminus1,2), L-1);

defineGlobal("n_causal_genes", n_causal_genes);
defineGlobal("trait_locs", trait_locs);
defineGlobal("range_genes", range_genes);
//print(range_genes);
defineGlobal("traits_transmissibility", traits_transmissibility);
defineGlobal("traits_recoveryrate", traits_recoveryrate);
