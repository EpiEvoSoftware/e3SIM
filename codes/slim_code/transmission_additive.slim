s1 reproduction()
{
	// Transmission
	infectors = which(Host_states==2);
	subpops = sim.subpopulations;
	infector_subpops = subpops[infectors];

	for (infector_subpop in infector_subpops)
	{	
		contact_ids = infector_subpop.getValue("Contacts");
		if (length(contact_ids)>0)
		{
			infector_pathogen = sample(infector_subpop.individuals, 1);
			muts = infector_pathogen.genome1.mutationsOfType(1);
			transmissibility = 1 + additive_trait(muts, "e0", cap_transmissibility);

			trans_event = rbinom(length(contact_ids), 1, Infection_rate * transmissibility);
			contacts_states = Host_states[contact_ids];
			
			if (super_infection==T) { infectee_id = contact_ids[which((trans_event==1)&(subpops[contact_ids].individualCount < cap_withinhost))]; }
			else { infectee_id = contact_ids[which((trans_event==1)&(contacts_states==0))]; }
			for (i in infectee_id)
			{
				subpops[i].addRecombinant(infector_pathogen.genome1, NULL, NULL, NULL, NULL, NULL).tag = infector_pathogen.tag;
				line = paste(community.tick, infector_subpop.tag, i);
				writeFile(paste0(cwdir, "/infection_raw.txt"), line, append=T, compress=T);
			}
		}
	}
	self.active=F;
}