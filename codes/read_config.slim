str_pars = c("model", "ref_path", "causal_gene_path", "contact_network_path", "cwdir", "seeds_vcf", "dr_type", "trans_type");
int_pars = c("host_size", "n_generation", "seed_size", "n_causal_genes_1", "n_causal_genes_2", "cap_withinhost", "burn_in_generations", "burn_in_Ne", "dr_efsize");
float_pars = c("Infection_rate", "Recovery_rate", "mut_rate", "sample_rate", "within_host_reproduct_rate", "latent_prob", "activate_rate", "IE_rate", "IS_rate", "ER_rate", "RS_rate", "burn_in_mutrate", "treatment_recovery_rate", "cap_1", "cap_2");
list_pars = c("treatment_gens", "massive_samp_gens", "massive_samp_prob", "recover_after_samp_rate");
bin_pars = c("super_infection", "within_host_evolution", "massive_sampling", "multiple_epochs");

defineGlobal("configs", readFile("params.config"));

for(l in configs)
{
	ll = strsplit(l, ":");
	if (any(ll[0]==int_pars))
	{
		defineGlobal(ll[0], asInteger(ll[1]));
	}
	else if (any(ll[0]==str_pars))
	{
		defineGlobal(ll[0], ll[1]);
	}
	else if (any(ll[0]==float_pars))
	{
		defineGlobal(ll[0], asFloat(ll[1]));	
	}
	else if (any(ll[0]==list_pars))
	{
		defineGlobal(ll[0], strsplit(ll[1], sep=","));	
	}
	else if (any(ll[0]==bin_pars))
	{
		defineGlobal(ll[0], asLogical(ll[1]));	
	}
}

print(massive_sampling);
