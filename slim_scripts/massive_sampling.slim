s11 early() {
	// Massive sampling event
	i_inds = which(Host_states==2);
	hosts = sim.subpopulations;
	draw_uniform = runif(length(i_inds));
	which_samp_event = which(massive_sample_generation == community.tick);
	state_transition = findInterval(draw_uniform, c(0, massive_sample_prob[which_samp_event] * massive_sample_recover_prob[which_samp_event], massive_sample_prob[which_samp_event]));
	sampled_inds = i_inds[which(state_transition<=1)];
	recovered_inds = i_inds[which(state_transition==0)];

	if (length(sampled_inds)>0)
	{
		sampled_inds_genomes = c();
		for (ind in sampled_inds)
		{
			sampled_pathogen = sample(hosts[ind].individuals, 1);
			line1 = paste(community.tick, ind);
			writeFile(paste0(cwdir, runid, "/sample.txt"), line1, append=T, compress=T);
			sampled_inds_genomes = c(sampled_inds_genomes, sampled_pathogen);
		}
		sim.treeSeqRememberIndividuals(sampled_inds_genomes);
	}

	if (length(recovered_inds)>0)
	{
		Host_states[recovered_inds]=3;
		for (ind in recovered_inds)
		{
			line1 = paste(community.tick, ind);
			writeFile(paste0(cwdir, runid, "/massive_recovery.txt"), line1, append=T, compress=T);
		} 
		sim.killIndividuals(sim.subpopulations[recovered_inds].individuals);
	}
}

