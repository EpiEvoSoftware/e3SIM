defineConstant("L", initializeAncestralNucleotides(ref_path));
initializeRecombinationRate(0);

defineGlobal("effsize_pos", readCSV(paste0(cwdir, "/causal_gene_info.csv"), colNames = T));
initializeMutationTypeNuc(0, 1, "f", 0.0); // Neutral mutations
initializeGenomicElementType(0, 0, 1.0, mmJukesCantor(mut_rate)); // 1/12 yearly mutation rate
	
initializeGenomicElement(0, 0, L - 1);

range_genes = c();
traits_transmissibility = c();
traits_recoveryrate = c();
n_causal_genes = n_causal_genes_1 + n_causal_genes_2;
//n_causal_genes = nrow(effsize_pos);
for (i in 1:n_causal_genes)
{
	range_genes = c(range_genes, effsize_pos.subset(i-1,1):effsize_pos.subset(i-1,2));
	traits_transmissibility = c(traits_transmissibility, rep(effsize_pos.subset(i-1,3), effsize_pos.subset(i-1,2) - effsize_pos.subset(i-1,1) + 1));
	traits_recoveryrate = c(traits_recoveryrate, rep(effsize_pos.subset(i-1,4), effsize_pos.subset(i-1,2) - effsize_pos.subset(i-1,1) + 1));
}

defineGlobal("range_genes", range_genes);
defineGlobal("traits_transmissibility", traits_transmissibility);
defineGlobal("traits_recoveryrate", traits_recoveryrate);
